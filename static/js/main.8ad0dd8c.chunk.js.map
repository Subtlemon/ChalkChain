{"version":3,"sources":["logo.svg","components/Entry.js","components/RoomComponent.js","components/DrawCanvas.js","components/DrawComponent.js","components/GuessComponent.js","components/GamePhaseComponent.js","components/ChainLinkView.js","components/SpectateComponent.js","components/StartComponent.js","components/GameComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","layout","textField","margin","Entry","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCreateRoom","state","nickName","onCreateRoom","roomName","toUpperCase","console","log","window","alert","handleJoinRoom","onJoinRoom","URLSearchParams","location","search","keys","next","value","_this2","react_default","a","createElement","style","src","logo","className","alt","display","flexDirection","TextField_default","label","onChange","event","setState","target","required","Button_default","variant","onClick","flex","Link_default","href","Component","paper","padding","divider","settingsContainer","settingsRow","marginBottom","marginLeft","marginRight","RoomComponent","componentDidMount","userRef","roomRef","child","on","snapshot","val","users","sharedRef","sharedState","handleSaveButton","set","handleStartButton","userIDs","usersLength","length","order","prev","i","transaction","currentData","settings","assign","players","error","committed","getUserListItems","map","key","index","ListItem_default","ListItemIcon_default","AccountBox_default","ListItemText_default","primary","primaryTypographyProps","reduce","curr","Divider_default","drawTime","off","Paper_default","Typography_default","origin","theme","type","List_default","userID","canvas","position","height","width","top","left","canvasContainer","paddingTop","maxHeight","maxWidth","toolbar","gridTemplateColumns","gridColumnGap","colours","justifySelf","gridRowGap","gridTemplateRows","svg","misc","UndoStack","undo","endIdx","Math","max","stack","slice","redo","min","push","element","DrawCanvas","handleMouseDown","_this2$getCursorPosit","getCursorPosition","_this2$getCursorPosit2","slicedToArray","x","y","drawCircle","ctx","beginPath","moveTo","penDown","handleMouseUp","closePath","_this2$getCursorPosit3","_this2$getCursorPosit4","saveImage","handleMouseMove","_this2$getCursorPosit5","_this2$getCursorPosit6","lineTo","stroke","handleTouchStart","touches","handleTouchEnd","handleTouchMove","preventDefault","handleKeyDown","ctrlKey","undoImage","shiftKey","redoImage","rect","refs","getBoundingClientRect","clientX","clientY","arc","radius","PI","fill","clearscreen","fillStyle","fillscreen","colour","fillRect","drawImage","base64EncodedImage","image","Image","onload","undoStack","toDataURL","pop","handleNewRadius","handleColour","backgroundColor","getContext","ontouchmove","strokeStyle","lineWidth","_this3","onKeyDown","tabIndex","outline","ref","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","Tooltip_default","title","placement","bind","cx","cy","r","IconButton_default","Undo_default","Redo_default","Delete_default","DrawComponent","progressPresenseRef","progressRef","chainID","onDisconnect","remove","ready","timer","intervalID","setInterval","clearInterval","handleConfirmDrawing","componentWillUnmount","chainRef","update","drawing","gameRef","then","cancel","data","word","DrawCanvas_DrawCanvas","numNotReady","GuessComponent","componentWillUnount","handleConfirmGuess","guess","GamePhaseComponent","componentDidUpdate","prevProps","updateChainLinkData","numNotReadyListener","limitToLast","once","chainLinkData","getMainComponent","GuessComponent_GuessComponent","DrawComponent_DrawComponent","ChainLinkView","chainContainer","headerContainer","SpectateComponent","synced","chains","forEach","chainSnapshot","thisChain","chainLinkSnapshot","handleStartSync","driverID","handleBecomeDriver","handleNext","chainIDs","idx","indexOf","handlePrevious","handleLeave","onLeave","getChainItems","chainLink","ChainLinkView_ChainLinkView","getHeader","disabled","StartComponent","handleConfirmWord","prevNick","prevID","GameComponent","presenseRef","progressGame","mainView","nextChain","GamePhaseComponent_GamePhaseComponent","SpectateComponent_SpectateComponent","StartComponent_StartComponent","viewProps","App","joinIfNotExist","onJoinedRoom","createRandomRoom","joinIfExist","undefined","onSuccess","onError","randomName","onRoomExist","roomUrl","firebase","database","onNoRoom","hasChild","buf","Uint8Array","crypto","getRandomValues","Array","from","decimal","toString","substr","join","handleLeaveGame","RoomComponent_RoomComponent","GameComponent_GameComponent","Entry_Entry","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.8ad0dd8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ac288ddb.svg\";","import React, { Component } from 'react';\nimport logo from '../logo.svg';\n\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = {\n  layout: {\n    \n  },\n  textField: {\n    margin: '5px',\n  },\n}\n\n/**\n * Small entry component to create or join a room.\n *\n * Sends a create or join fetch request to the server. Server will respond\n * with a URL to open an EventSource with.\n */\nexport default class Entry extends Component {\n  constructor(props) {\n    super(props);\n\n    let roomName = new URLSearchParams(window.location.search).keys().next().value;\n    this.state = {\n      roomName: roomName || '',\n      nickName: '',\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  // Consider skipping this process and simply calling onJoinRoom with a flag\n  // to create the room if none exists.\n  handleCreateRoom = () => {\n    if (!this.state.nickName) {\n      window.alert(\"No nickname entered.\");\n      return;\n    }\n\n    if (this.props.onCreateRoom) {\n      this.props.onCreateRoom(this.state.roomName.toUpperCase(), this.state.nickName);\n    } else {\n      console.log(\"Component was not given a create room handler.\");\n    }\n  }\n  \n  handleJoinRoom = () => {\n    if (!this.state.nickName) {\n      window.alert(\"No nickname entered.\");\n      return;\n    }\n    if (!this.state.roomName) {\n      window.alert(\"No room name entered.\");\n      return;\n    }\n\n    if (this.props.onJoinRoom) {\n      this.props.onJoinRoom(this.state.roomName.toUpperCase(), this.state.nickName);\n    } else {\n      console.log(\"Component was not given a join room handler.\");\n    }\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n          <TextField\n            label='Room Name'\n            value={this.state.roomName}\n            onChange={(event) => this.setState({roomName: event.target.value})}\n            style={styles.textField}\n          />\n          <TextField\n            required\n            label='Nickname'\n            value={this.state.nickName}\n            onChange={(event) => this.setState({nickName: event.target.value})}\n            style={styles.textField}\n          />\n          <div style={{display: 'flex', flexDirection: 'row'}}>\n            <Button\n              variant='contained'\n              onClick={this.handleCreateRoom}\n              style={{flex: '1 1 auto', margin: '5px'}}\n            >\n              Create Room\n            </Button>\n            <Button\n              variant='contained'\n              onClick={this.handleJoinRoom}\n              style={{flex: '1 1 auto', margin: '5px'}}\n            >\n              Join Room\n            </Button>\n          </div>\n          <Link href='https://github.com/Subtlemon/ChalkChain' variant='body1'>\n            View Source on Github\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\n// Material-ui core.\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons.\nimport UserActive from '@material-ui/icons/AccountBox';\nimport UserInactive from '@material-ui/icons/AccountBox';\n\nconst styles = {\n  layout: {\n\n  },\n  paper: {\n    padding: '30px',\n    margin: '10px',\n  },\n  divider: {\n    margin: '10px',\n  },\n  settingsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  settingsRow: {\n    marginBottom: '10px',\n  },\n  textField: {\n    marginLeft: '5px',\n    marginRight: '5px',\n  }\n};\n\nexport default class RoomComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: [],\n      sharedState: {\n        drawTime: 60,\n      },\n    };\n  }\n\n  /***************************************************************************\n   * Lifecycle functions                                                     *\n   ***************************************************************************/\n\n  componentDidMount = () => {\n    // Register a listener for users to update list of users in room.\n    this.userRef = this.state.roomRef.child('users');\n    this.userRef.on('value', (snapshot) => {\n      if (snapshot.val()) {\n        // Construct array of object's values' nickName.\n        this.setState({\n          users: snapshot.val(),\n        });\n      }\n    });\n\n    // Register a listener for shared room state, such as round time limit.\n    this.sharedRef = this.state.roomRef.child('waitingState');\n    this.sharedRef.on('value', (snapshot) => {\n      if (snapshot.val()) {\n        this.setState({\n          sharedState: snapshot.val()\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.userRef.off('value');\n    this.sharedRef.off('value');\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      roomRef: props.roomRef,\n      roomName: props.roomName,\n      userID: props.userID,\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  handleSaveButton = (event) => {\n    // This assumes set cannot fail.\n    this.sharedRef.set(this.state.sharedState);\n  }\n\n  handleStartButton = (event) => {\n    if (!this.state.users) {\n      window.alert('Internal Error: No users found.');\n      return;\n    }\n\n    // Determine gameplay order based on user state.\n    const userIDs = Object.keys(this.state.users);\n    const usersLength = userIDs.length;\n    if (usersLength < 2) {\n      window.alert(\"Can't start game with less than 2 players.\");\n      return;\n    }\n    let order = {};\n    order[userIDs[0]] = {\n      prev: userIDs[usersLength - 1],\n    };\n    for (let i = 1; i < usersLength; ++i) {\n      order[userIDs[i]] = {\n        prev: userIDs[i-1],\n      };\n      order[userIDs[i-1]].next = userIDs[i];\n    }\n    order[userIDs[usersLength - 1]].next = userIDs[0];\n\n    return this.state.roomRef.child('game').transaction((currentData) => {\n      if (currentData === null) {\n        return {\n          settings: Object.assign(this.state.sharedState, {\n            order: order,\n            players: this.state.users,\n          }),\n        };\n      } else {\n        return; // Abort the transaction.\n      };\n    }, (error, committed, snapshot) => {\n      if (error) {\n        window.alert('Error: ' + error);\n      } else if (!committed) {\n        window.alert('Game is already started.');\n      } else {\n        console.log('Game started successfully.');\n      }\n    });\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getUserListItems = () => {\n    if (this.state.users && Object.keys(this.state.users).length) {\n      return Object.keys(this.state.users).map((key, index) => {\n        return (\n          <ListItem key={key}>\n            <ListItemIcon>\n              <UserActive />\n            </ListItemIcon>\n            <ListItemText\n              primary={this.state.users[key].nickName}\n              primaryTypographyProps={{variant: 'h6'}}\n            />\n          </ListItem>\n        );\n      }).reduce((prev, curr) => [prev, <Divider key={prev+'div'} />, curr]);\n    } else {\n      return (\n        <ListItem>\n          <ListItemText primary=\"You've somehow entered a ghost room.\n            It's probably in your best interest to leave.\"/>\n        </ListItem>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <Paper style={styles.paper}>\n          <Typography variant='h4'>\n            Room Name: <b>{this.state.roomName}</b>\n          </Typography>\n          <Typography variant='subtitle1'>\n            Join with the above room name or below link!\n          </Typography>\n          <Typography>\n            {window.location.origin + '/?' + this.state.roomName}\n          </Typography>\n          <Divider variant='middle' style={styles.divider} />\n          <div style={styles.settingsContainer}>\n            <div style={styles.settingsRow}>\n              <TextField\n                label='Round Theme (unused)'\n                value={this.state.sharedState.theme || ''}\n                onChange={(event) => this.setState({sharedState: {theme: event.target.value}})}\n                style={styles.textField}\n              />\n              <TextField\n                required\n                label='Seconds per drawing'\n                type='number'\n                value={this.state.sharedState.drawTime}\n                onChange={(event) => this.setState({sharedState: {drawTime: event.target.value}})}\n                style={styles.textField}\n              />\n            </div>\n            <Button variant='contained' onClick={this.handleSaveButton}>Save Settings</Button>\n          </div>\n        </Paper>\n        <Paper style={styles.paper}>\n          <Typography variant='h5'>\n            Lobby\n          </Typography>\n          <List>\n            {this.getUserListItems()}\n          </List>\n          <Button variant='contained' onClick={this.handleStartButton}>Start Game</Button>\n        </Paper>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport ClearIcon from '@material-ui/icons/Delete';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\n\nconst styles = {\n  canvas: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    top: '0',\n    left: '0',\n  },\n  canvasContainer: {\n    position: 'relative',\n    paddingTop: '100%',\n    width: '100%',\n    maxHeight: '500px',\n    maxWidth: '500px',\n  },\n  divider: {\n    margin: '10px',\n  },\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto',\n    gridColumnGap: '10px',\n  },\n  colours: {\n    justifySelf: 'center',\n    display: 'grid',\n    gridColumnGap: '5px',\n    gridRowGap: '5px',\n    gridTemplateColumns: '40px 40px 40px 40px 40px',\n    gridTemplateRows: '40px 40px',\n  },\n  svg: {\n    height: '100%',\n    width: '100%',\n  },\n  misc: {\n    justifySelf: 'center',\n    display: 'grid',\n    gridColumnGap: '5px',\n    gridRowGap: '5px',\n    gridTemplateColumns: '40px 40px 40px',\n    gridTemplateRows: '40px 40px',\n  },\n};\n\nclass UndoStack {\n  constructor() {\n    this.stack = [];\n    this.endIdx = 0;\n  }\n\n  undo = () => {\n    this.endIdx = Math.max(0, this.endIdx - 1);\n    return this.stack.slice(0, this.endIdx);\n  }\n\n  redo = () => {\n    this.endIdx = Math.min(this.stack.length, this.endIdx + 1);\n    return this.stack.slice(0, this.endIdx);\n  }\n\n  push = (element) => {\n    const maxUndos = 20;\n    this.stack = this.stack.slice(Math.max(0, this.endIdx - 20), this.endIdx);\n    this.stack.push(element);\n    this.endIdx = this.stack.length;\n  }\n}\n\n// Assumes canvas cannot transform.\nexport default class DrawCanvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.undoStack = new UndoStack();\n    this.state = {\n      colour: 'black',\n      radius: 3,\n    };\n  }\n\n  componentDidMount() {\n    let canvas = this.refs.canvas;\n    this.ctx = canvas.getContext('2d');\n\n    // Resize the canvas to fit parent.\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n\n    this.clearscreen();\n\n    // Workaround to enable preventDefault()\n    // https://github.com/facebook/react/issues/9809\n    canvas.ontouchmove = this.handleTouchMove;\n  }\n\n  componentDidUpdate() {\n    this.ctx.fillStyle = this.state.colour;\n    this.ctx.strokeStyle = this.state.colour;\n    this.ctx.lineWidth = this.state.radius * 2;\n  }\n\n  componentWillUnmount() {\n    delete this.ctx;\n  }\n\n  /***************************************************************************\n   * Canvas Events                                                           *\n   ***************************************************************************/\n\n  handleMouseDown = (event) => {\n    const [x, y] = this.getCursorPosition(event);\n    this.drawCircle(x, y);\n    this.ctx.beginPath();\n    this.ctx.moveTo(x, y);\n    this.setState({penDown: true});\n  }\n\n  handleMouseUp = (event) => {\n    if (this.state.penDown) {\n      this.ctx.closePath();\n      const [x, y] = this.getCursorPosition(event);\n      this.drawCircle(x, y);\n      this.saveImage() // Hacky undo/redo.\n    }\n    this.setState({penDown: false});\n  }\n\n  handleMouseMove = (event) => {\n    if (this.state.penDown) {\n      const [x, y] = this.getCursorPosition(event);\n      this.ctx.lineTo(x, y);\n      this.ctx.stroke();\n    }\n  }\n\n  handleTouchStart = (event) => {\n    if (event.touches.length) {\n      this.handleMouseDown(event.touches[0]);\n    }\n  }\n\n  handleTouchEnd = (event) => {\n    if (event.touches.length) {\n      this.handleMouseUp(event.touches[0]);\n    }\n  }\n\n  handleTouchMove = (event) => {\n    if (event.touches.length) {\n      event.preventDefault();\n      this.handleMouseMove(event.touches[0]);\n    }\n  }\n\n  handleKeyDown = (event) => {\n    if (event.ctrlKey && event.key === 'z') {\n      this.undoImage();\n    } else if (event.ctrlKey && event.shiftKey && event.key === 'Z') {\n      this.redoImage();\n    }\n  }\n\n  /***************************************************************************\n   * Canvas Helpers                                                          *\n   ***************************************************************************/\n\n  getCursorPosition = (event, canvas) => {\n    const rect = this.refs.canvas.getBoundingClientRect();\n    return [event.clientX - rect.left, event.clientY - rect.top];\n  }\n\n  /**\n   * Draws a circle of radius defined by state centered at x and y.\n   */\n  drawCircle = (x, y) => {\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, this.state.radius, 0, 2 * Math.PI);\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  clearscreen = () => {\n    this.ctx.fillStyle = 'white';\n    this.fillscreen();\n    this.ctx.fillStyle = this.state.colour;\n  }\n\n  fillscreen = () => {\n    this.ctx.fillRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n  }\n\n  drawImage = (base64EncodedImage) => {\n    if (!base64EncodedImage) {\n      this.clearscreen();\n    }\n    let image = new Image();\n    image.onload = () => {\n      this.ctx.drawImage(image, 0, 0);\n    }\n    image.src = base64EncodedImage;\n  }\n\n  saveImage = () => {\n    this.undoStack.push(this.refs.canvas.toDataURL());\n  }\n\n  undoImage = () => {\n    this.drawImage(this.undoStack.undo().pop());\n  }\n\n  redoImage = () => {\n    this.drawImage(this.undoStack.redo().pop());\n  }\n\n  /***************************************************************************\n   * Button Event Handlers                                                   *\n   ***************************************************************************/\n\n  handleNewRadius = (radius) => {\n    this.setState({radius: radius});\n  }\n\n  handleColour = (event) => {\n    this.setState({\n      colour: event.target.style.backgroundColor\n    });\n  };\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  render() {\n    return (\n      <div\n        onKeyDown={this.handleKeyDown}\n        tabIndex={-1}\n        style={{outline: 'none'}}\n      >\n        <Paper style={styles.canvasContainer}>\n          <canvas\n            ref='canvas'\n            onMouseDown={this.handleMouseDown}\n            onMouseUp={this.handleMouseUp}\n            onMouseMove={this.handleMouseMove}\n            onTouchStart={this.handleTouchStart}\n            onTouchEnd={this.handleTouchEnd}\n            // Moved onTouchMove to componentDidMount.\n            style={styles.canvas}\n          />\n        </Paper>\n        <Divider style={styles.divider} />\n        <div style={styles.toolbar}>\n          <div style={styles.colours}>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'black'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'red'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'green'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'blue'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'yellow'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'white'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'aqua'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'purple'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'brown'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'orange'}}/>\n          </div>\n          <div style={styles.misc}>\n            <Tooltip title='Small Brush' placement='top'>\n              <Paper onClick={this.handleNewRadius.bind(this, 1)}>\n                <svg style={styles.svg}><circle cx='20' cy='20' r='5' fill='black' /></svg>\n              </Paper>\n            </Tooltip>\n            <Tooltip title='Medium Brush' placement='top'>\n              <Paper onClick={this.handleNewRadius.bind(this, 3)}>\n                <svg style={styles.svg}><circle cx='20' cy='20' r='10' fill='black' /></svg>\n              </Paper>\n            </Tooltip>\n            <Tooltip title='Large Brush' placement='top'>\n              <Paper onClick={this.handleNewRadius.bind(this, 15)}>\n                <svg style={styles.svg}><circle cx='20' cy='20' r='15' fill='black' /></svg>\n              </Paper>\n            </Tooltip>\n            <Tooltip title='Undo' placement='bottom'>\n              <IconButton onClick={this.undoImage}>\n                <UndoIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title='Redo' placement='bottom'>\n              <IconButton onClick={this.redoImage}>\n                <RedoIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title='Fill Screen' placement='bottom'>\n              <IconButton onClick={() => {this.fillscreen(); this.saveImage();}}>\n                <ClearIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport DrawCanvas from './DrawCanvas';\n\nconst styles = {\n  layout: {\n\n  },\n  paper: {\n    padding: '20px',\n  },\n  divider: {\n    margin: '10px',\n  }\n};\n\nexport default class DrawComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timer: 60,\n    };\n  }\n\n  componentDidMount = () => {\n    this.progressPresenseRef = this.state.progressRef.child(this.state.chainID);\n    this.progressPresenseRef.onDisconnect().remove();\n    this.progressPresenseRef.set(false);\n    this.setState({ready: false, timer: this.state.drawTime});\n\n    // Set timer.\n    this.intervalID = setInterval(() => {\n      this.setState({timer: this.state.timer - 1});\n      if (this.state.timer <= 0) {\n        clearInterval(this.intervalID);\n        if (!this.state.ready) {\n          this.handleConfirmDrawing();\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount = () => {\n    if (this.intervalID) {\n      clearInterval(this.intervalID);\n    }\n    delete this.chainRef;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.gameRef,\n      progressRef: props.progressRef,\n      players: props.players,\n      drawTime: props.drawTime,\n      userID: props.userID,\n      chainID: props.chainID,\n      numNotReady: props.numNotReady,\n      data: props.data,\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  handleConfirmDrawing = (event) => {\n    if (this.chainRef) {\n      this.chainRef.update({image: this.refs.drawing.refs.canvas.toDataURL()});\n    } else {\n      this.chainRef = this.state.gameRef.child('chains').child(this.state.chainID).push();\n      this.chainRef.set({\n        image: this.refs.drawing.refs.canvas.toDataURL(),\n        userID: this.state.userID,\n      });\n    }\n\n    if (!this.state.ready) {\n      this.progressPresenseRef.remove().then(() => {\n        this.progressPresenseRef.onDisconnect().cancel();\n        delete this.progressPresenseRef;\n      });\n      this.setState({ready: true});\n    }\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <Paper style={styles.paper}>\n          <Typography variant='h6'>\n            You are drawing <b>{this.state.players[this.state.data.userID].nickName}</b>'s word:\n          </Typography>\n          <Typography variant='h5'>\n            <b>{this.state.data.word}</b>\n          </Typography>\n        </Paper>\n        <Divider style={styles.divider} />\n        <DrawCanvas ref='drawing'/>\n        <Divider style={styles.divider} />\n        <Paper style={styles.paper}>\n          <Typography variant='h6'>\n            {this.state.timer ? this.state.timer + 's remaining' : ''}\n          </Typography>\n          <Typography>\n            {this.state.numNotReady && this.state.ready ? 'Waiting on ' + this.state.numNotReady + ' players...' : ''}\n          </Typography>\n          <Button\n            variant='contained'\n            onClick={this.handleConfirmDrawing}\n          >\n            {this.state.ready ? 'Update Drawing' : 'Finished Drawing'}\n          </Button>\n        </Paper>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  layout: {\n\n  },\n  paper: {\n    padding: '20px',\n  },\n  divider: {\n    margin: '10px',\n  },\n};\n\nexport default class GuessComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ready: false,\n      guess: '',\n    };\n  }\n\n  componentDidMount = () => {\n    this.progressPresenseRef = this.state.progressRef.child(this.state.chainID);\n    this.progressPresenseRef.onDisconnect().remove();\n    this.progressPresenseRef.set(false);\n    this.setState({ready: false});\n  }\n\n  componentWillUnount = () => {\n    delete this.chainRef;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.gameRef,\n      progressRef: props.progressRef,\n      players: props.players,\n      chainID: props.chainID,\n      userID: props.userID,\n      numNotReady: props.numNotReady,\n      data: props.data,\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  handleConfirmGuess = (event) => {\n    if (!this.state.guess) {\n      window.alert(\"You didn't guess anything\");\n      return;\n    }\n\n    if (this.chainRef) {\n      this.chainRef.update({word: this.state.guess});\n    } else {\n      // Push a new link in the chain and update server.\n      this.chainRef = this.state.gameRef.child('chains').child(this.state.chainID).push();\n      this.chainRef.set({\n        word: this.state.guess,\n        userID: this.state.userID,\n      });\n    }\n\n    if (!this.state.ready) {\n      this.progressPresenseRef.remove().then(() => {\n        this.progressPresenseRef.onDisconnect().cancel();\n        delete this.progressPresenseRef;\n      });\n      this.setState({ready: true});\n    }\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <Paper style={styles.paper}>\n          <Typography variant='h6'>\n            You are guessing <b>{this.state.players[this.state.data.userID].nickName}</b>'s image:\n          </Typography>\n        </Paper>\n        <Divider style={styles.divider}/>\n        <Paper>\n          <img ref='img' alt='guess' src={this.state.data.image} />\n        </Paper>\n        <Divider style={styles.divider} />\n        <Paper style={styles.paper}>\n          <Typography>\n            {this.state.numNotReady && this.state.ready ? 'Waiting on ' + this.state.numNotReady + ' players...' : ''}\n          </Typography>\n          <TextField\n            label='What do you see?'\n            value={this.state.guess}\n            onChange={(event) => this.setState({guess: event.target.value})}\n          />\n          <Button\n            variant='contained'\n            onClick={this.handleConfirmGuess}\n          >\n            {this.state.ready ? 'Update Guess' : 'Guess'}\n          </Button>\n        </Paper>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport DrawComponent from './DrawComponent';\nimport GuessComponent from './GuessComponent';\n\nconst styles = {\n  layout: {\n\n  },\n  paper: {\n    padding: '20px',\n  },\n};\n\nexport default class GamePhaseComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ready: false,\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.chainID !== this.props.chainID) {\n      this.updateChainLinkData();\n    }\n  }\n\n  componentDidMount = () => {\n    this.updateChainLinkData();\n    this.numNotReadyListener = (snapshot) => {\n        if (snapshot.val()) {\n          this.setState({numNotReady: Object.keys(snapshot.val()).length});\n        }\n      };\n    this.props.progressRef.on('value', this.numNotReadyListener);\n  }\n\n  componentWillUnmount = () => {\n    this.props.progressRef.off('value', this.numNotReadyListener);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.gameRef,\n      progressRef: props.progressRef,\n      settings: props.settings,\n      chainID: props.chainID,\n      userID: props.userID,\n    };\n  }\n\n  updateChainLinkData = () => {\n    this.state.gameRef.child('chains').child(this.state.chainID)\n      .limitToLast(1).once('child_added', (snapshot) => {\n        if (snapshot.val()) {\n          this.setState({chainLinkData: snapshot.val()});\n        }\n      });\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getMainComponent = () => {\n    if (this.state.chainLinkData && this.state.chainLinkData.image) {\n      return (\n        <GuessComponent\n          gameRef={this.state.gameRef}\n          progressRef={this.state.progressRef}\n          players={this.state.settings.players}\n          chainID={this.state.chainID}\n          userID={this.state.userID}\n          numNotReady={this.state.numNotReady}\n          data={this.state.chainLinkData}\n        />\n      );\n    } else if (this.state.chainLinkData && this.state.chainLinkData.word) {\n      return (\n        <DrawComponent\n          gameRef={this.state.gameRef}\n          progressRef={this.state.progressRef}\n          players={this.state.settings.players}\n          drawTime={this.state.settings.drawTime}\n          chainID={this.state.chainID}\n          userID={this.state.userID}\n          numNotReady={this.state.numNotReady}\n          data={this.state.chainLinkData}\n        />\n      );\n    } else {\n      return (\n        <Paper style={styles.paper}>\n          <Typography variant='h5'>\n            Loading game phase...\n          </Typography>\n        </Paper>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        {this.getMainComponent()}\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  layout: {\n\n  }\n};\n\nexport default class ChainLinkView extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      data: props.data,\n      players: props.players,\n    };\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getMainComponent = () => {\n    if (this.state.data.word) {\n      return (\n        <Typography variant='subtitle1'>\n          <b>{this.state.players[this.state.data.userID].nickName}</b> guessed: <b>{this.state.data.word}</b>\n        </Typography>\n      );\n    } else {\n      return [\n        <Typography variant='subtitle1'>\n          <b>{this.state.players[this.state.data.userID].nickName}</b> drew this:\n        </Typography>,\n        <img src={this.state.data.image} alt='Broken Image, Sorry!'/>\n      ];\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        {this.getMainComponent()}\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport ChainLinkView from './ChainLinkView';\n\nconst styles = {\n  layout: {\n\n  },\n  chainContainer: {\n\n  },\n  divider: {\n    margin: '10px',\n  },\n  paper: {\n    padding: '20px',\n    margin: '10px',\n  },\n  headerContainer: {\n    maxWidth: '500px',\n  },\n};\n\nexport default class SpectateComponent extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      synced: false,\n    };\n  }\n\n  /***************************************************************************\n   * Lifecycle functions                                                     *\n   ***************************************************************************/\n\n  componentDidMount = () => {\n    // Register a listener for shared room state.\n    this.sharedRef = this.state.gameRef.child('spectateState');\n    this.sharedRef.on('value', (snapshot) => {\n      if (snapshot.val()) {\n        this.setState({\n          synced: true,\n          sharedState: snapshot.val(),\n        });\n      }\n    });\n\n    // Load in all chain data.\n    this.state.gameRef.child('chains').once('value').then((snapshot) => {\n      if (snapshot.val()) {\n        let chains = {};\n        snapshot.forEach((chainSnapshot) => {\n          let thisChain = [];\n          chainSnapshot.forEach((chainLinkSnapshot) => {\n            thisChain.push(chainLinkSnapshot.val());\n          });\n          chains[chainSnapshot.key] = thisChain;\n        });\n        this.setState({\n          chains: chains,\n        });\n      }\n    });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.gameRef,\n      players: props.players,\n      userID: props.userID,\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  handleStartSync = (event) => {\n    this.sharedRef.set({\n      driverID: this.state.userID,\n      chainID: this.state.userID,\n    });\n  }\n\n  handleBecomeDriver = (event) => {\n    this.sharedRef.update({driverID: this.state.userID});\n  }\n\n  handleNext = (event) => {\n    const chainIDs = Object.keys(this.state.chains);\n    let idx = chainIDs.indexOf(this.state.sharedState.chainID) + 1;\n    if (idx >= chainIDs.length) {\n      idx = 0;\n    }\n    this.sharedRef.update({\n      chainID: chainIDs[idx],\n    });\n  }\n\n  handlePrevious = (event) => {\n    const chainIDs = Object.keys(this.state.chains);\n    let idx = chainIDs.indexOf(this.state.sharedState.chainID);\n    if (idx === 0) {\n      idx = chainIDs.length;\n    }\n    this.sharedRef.update({\n      chainID: chainIDs[idx-1],\n    });\n  }\n\n  handleLeave = (event) => {\n    if (this.props.onLeave) {\n      this.props.onLeave();\n    } else {\n      console.log('No onLeave handler found.');\n    }\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getChainItems = (chainID) => {\n    return [\n      <Typography variant='h6'>\n        The original word was: <b>{this.state.chains[chainID][0].word}</b>\n      </Typography>,\n      <Divider style={styles.divider} />,\n      this.state.chains[chainID].slice(1).map((chainLink) => {\n        return (\n          <ChainLinkView data={chainLink} players={this.state.players} />\n        );\n      }),\n    ];\n  }\n  \n  getMainComponent = () => {\n    if (this.state.chains) {\n      let chainID = this.state.userID;\n      if (this.state.sharedState && this.state.sharedState.chainID) {\n        chainID = this.state.sharedState.chainID;\n      }\n      return (\n        <div style={styles.chainContainer}>\n          {this.getChainItems(chainID)}\n        </div>\n      );\n    } else {\n      return (\n        <Typography>\n          Loading results...\n        </Typography>\n      );\n    }\n  }\n\n  getHeader = () => {\n    if (this.state.synced) {\n      return (\n        <div>\n          <Typography variant='h5'>\n            Reviewing Results\n          </Typography>\n          <Typography variant='subtitle1'>\n            Let's see the results with everyone!\n          </Typography>\n          <Button\n            variant='contained'\n            disabled={this.state.sharedState.driverID !== this.state.userID}\n            onClick={this.handlePrevious}\n            style={{margin: '5px'}}\n          >\n            Previous Chain\n          </Button>\n          <Button\n            variant='contained'\n            disabled={this.state.sharedState.driverID === this.state.userID}\n            onClick={this.handleBecomeDriver}\n            style={{margin: '5px'}}\n          >\n            Become Driver\n          </Button>\n          <Button\n            variant='contained'\n            disabled={this.state.sharedState.driverID !== this.state.userID}\n            onClick={this.handleNext}\n            style={{margin: '5px'}}\n          >\n            Next Chain\n          </Button>\n        </div>\n      );\n    } else {\n      return(\n        <div style={styles.headerContainer}>\n          <Typography variant='h5'>\n            Your Chain\n          </Typography>\n          <Typography variant='subtitle1'>\n            Take a sneak peak at how your chalk chain turned out,\n            then join everyone else in reviewing their results!\n          </Typography>\n          <Button\n            variant='contained'\n            onClick={this.handleStartSync}\n          >\n            Review Results\n          </Button>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <Paper style={styles.paper}>\n          {this.getHeader()}\n        </Paper>\n        <Paper style={styles.paper}>\n          {this.getMainComponent()}\n          <Divider style={styles.divider} />\n          <Button\n            variant='contained'\n            onClick={this.handleLeave}\n          >\n            Back to Waiting Room\n          </Button>\n        </Paper>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  layout: {\n\n  },\n  paper: {\n    padding: '20px',\n  },\n};\n\nexport default class StartComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ready: false,\n      word: '',\n    };\n  }\n\n  componentDidMount = () => {\n    this.progressPresenseRef = this.state.progressRef.child(this.state.chainID);\n    this.progressPresenseRef.onDisconnect().remove();\n    this.progressPresenseRef.set(false);\n    this.setState({ready: false});\n  }\n\n  componentWillUnmount = () => {\n    delete this.chainRef;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.gameRef,\n      progressRef: props.progressRef,\n      chainID: props.chainID,\n      prevNick: props.players[props.prevID].nickName,\n      users: props.players,\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  handleConfirmWord = (event) => {\n    if (!this.state.word) {\n      window.alert('Please enter a word for people to draw');\n      return;\n    }\n\n    if (this.chainRef) {\n      this.chainRef.update({word: this.state.word});\n    } else {\n      this.chainRef = this.state.gameRef.child('chains').child(this.state.chainID).push();\n      this.chainRef.set({\n        word: this.state.word,\n        userID: this.state.chainID,\n      });\n    }\n\n    if (!this.state.ready) {\n      this.progressPresenseRef.remove().then(() => {\n        this.progressPresenseRef.onDisconnect().cancel();\n        delete this.progressPresenseRef;\n      });\n      this.setState({ready: true});\n    }\n  }\n  \n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <Paper style={styles.paper}>\n          <Typography variant='h6'>\n            You are selecting a word for: <b>{this.state.prevNick}</b>\n          </Typography>\n          <TextField\n            label='Your word'\n            value={this.state.word}\n            onChange={(event) => this.setState({word: event.target.value})}\n          />\n          <Button\n            variant='contained'\n            onClick={this.handleConfirmWord}\n          >\n            {this.state.ready ? 'Update' : 'Confirm'}\n          </Button>\n        </Paper>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport GamePhaseComponent from './GamePhaseComponent';\nimport SpectateComponent from './SpectateComponent';\nimport StartComponent from './StartComponent';\n\nconst styles = {\n  layout: {\n\n  },\n};\n\nexport default class GameComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mainView: 'START_VIEW',\n    };\n  }\n\n  componentDidMount = () => {\n    // Establish presense in game.\n    this.presenseRef = this.state.gameRef.child('activePlayers').child(this.state.userID);\n    this.presenseRef.onDisconnect().remove();\n    this.presenseRef.set(this.state.userID);\n\n    // Set listener to progress through game if everybody is ready.\n    this.progressRef = this.state.gameRef.child('notReady');\n    this.progressRef.on('value', (snapshot) => {\n      if (!snapshot.val()) {\n        this.progressGame();\n      }\n    });\n\n    this.setState({mainView: 'START_VIEW', chainID: this.state.userID});\n  }\n\n  componentWillUnmount = () => {\n    this.progressRef.off();\n    delete this.progressRef;\n    this.presenseRef.remove().then(() => {\n      this.presenseRef.onDisconnect().cancel();\n      delete this.presenseRef;\n    });\n\n    // Also remove self from players list, to avoid being sucked back into the game.\n    this.state.gameRef.child('settings').child('players').child(this.state.userID).remove();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.viewProps.gameRef,\n      settings: props.viewProps.settings,\n      userID: props.userID,\n    };\n  }\n\n  /***************************************************************************\n   * Progression Event                                                       *\n   ***************************************************************************/\n\n  progressGame = () => {\n    const nextChain = this.state.settings.order[this.state.chainID].next;\n    if (nextChain === this.state.userID) {\n      // We've gone full circle.\n      this.setState({\n        mainView: 'SPECTATE_VIEW',\n      });\n    } else {\n      this.setState({\n        mainView: 'GAME_PHASE_VIEW',\n        chainID: nextChain,\n      });\n    }\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getMainComponent = () => {\n    if (this.state.mainView === 'GAME_PHASE_VIEW') {\n      return (\n        <GamePhaseComponent\n          gameRef={this.state.gameRef}\n          progressRef={this.state.gameRef.child('notReady')}\n          settings={this.state.settings}\n          chainID={this.state.chainID}\n          userID={this.state.userID}\n        />\n      );\n    } else if (this.state.mainView === 'SPECTATE_VIEW') {\n      return (\n        <SpectateComponent\n          gameRef={this.state.gameRef}\n          players={this.state.settings.players}\n          userID={this.state.userID}\n          onLeave={this.props.onLeave}\n        />\n      );\n    } else { // Default to START_VIEW.\n      return (\n        <StartComponent\n          gameRef={this.state.gameRef}\n          progressRef={this.state.gameRef.child('notReady')}\n          chainID={this.state.userID}\n          prevID={this.state.settings.order[this.state.userID].prev}\n          players={this.state.settings.players}\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        {this.getMainComponent()}\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport './App.css';\nimport Entry from './components/Entry';\nimport RoomComponent from './components/RoomComponent';\nimport GameComponent from './components/GameComponent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // Initialize Firebase\n    const config = {\n      apiKey: process.env.REACT_APP_API_KEY,\n      authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n      databaseURL: process.env.REACT_APP_DATABASE_URL,\n      projectId: process.env.REACT_APP_PROJECT_ID,\n      storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n      messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n    };\n    firebase.initializeApp(config);\n\n    this.state = {\n      mainView: 'ENTRY_VIEW',\n    };\n  }\n\n  /***************************************************************************\n   * Entry Event Handlers                                                    *\n   ***************************************************************************/\n\n  handleCreateRoom = (roomName, nickName) => {\n    if (roomName) {\n      this.joinIfNotExist(\n        roomName,\n        nickName,\n        this.onJoinedRoom,\n        (error) => {\n          window.alert('Failed to join room: ' + error);\n        },\n        () => {\n          window.alert('Room already exists with that name.');\n        }\n      );\n    } else {\n      this.createRandomRoom(nickName, this.onJoinedRoom, (error) => {\n        window.alert('Failed to join room: ' + error);\n      });\n    }\n  }\n\n  handleJoinRoom = (roomName, nickName) => {\n    this.joinIfExist(\n      roomName,\n      nickName,\n      this.onJoinedRoom,\n      undefined,\n      () => {\n        window.alert('No room found with that name.');\n      }\n    );\n  }\n\n  /***************************************************************************\n   * Entry Request Helpers                                                   *\n   ***************************************************************************/\n\n  /**\n   * Recursively attempts to create a room with a random name.\n   *\n   * On success, calls onSuccess with room name, user ID, and nickname.\n   *    Also sets a presense node under /rooms/<roomName>/users/<userID>\n   * On error, returns error message.\n   */\n  createRandomRoom = (nickName, onSuccess, onError) => {\n    this.joinIfNotExist(\n      this.randomName(),    // Random room name.\n      nickName,\n      onSuccess,\n      onError,\n      this.createRandomRoom // Recursively retry with new room name.\n    );\n  }\n\n  /**\n   * Attempts to create a room with roomName.\n   * \n   * On success, calls onSuccess with room name, user ID, and nickname.\n   *    Also sets a presense node under /rooms/<roomName>/users/<userID>\n   * On error, returns error message.\n   * On room exists, calls onRoomExist with nickname, onSuccess, and onError.\n   */\n  joinIfNotExist = (roomName, nickName, onSuccess, onError, onRoomExist) => {\n    const roomUrl = '/rooms/' + roomName;\n    let roomRef = firebase.database().ref(roomUrl);\n    // Note: This transaction is only to check existence of the room.\n    return roomRef.transaction((currentData) => {\n      if (currentData === null) {\n        // Not exactly sure if this does what I want, but it works, so :/\n        return {\n          users: null\n        };\n      } else {\n        console.log('Room already exists.');\n        return; // Abort the transaction.\n      }\n    }, (error, committed, snapshot) => {\n      if (error) {\n        onError(error);\n      } else if (!committed) {\n        if (onRoomExist) {\n          onRoomExist(nickName, onSuccess, onError);\n        }\n      } else {\n        let presenseRef = firebase.database().ref(roomUrl + '/users').push();\n        presenseRef.onDisconnect().remove();\n        // Note: This assumes set cannot fail.\n        presenseRef.set({\n          nickName: nickName\n        }).then(() => onSuccess(roomName, presenseRef.key));\n      }\n    });\n  }\n\n  /**\n   * Attempts to join a room with roomName.\n   *\n   * On success, calls onSuccess with room name and user ID.\n   *    Also sets a presense node under /rooms/<roomName>/users/<userID>\n   * On no room, calls onNoRoom.\n   * This function cannot actually call onError.\n   */\n  joinIfExist = (roomName, nickName, onSuccess, onError, onNoRoom) => {\n    let roomRef = firebase.database().ref('/rooms');\n    roomRef.once('value', (snapshot) => {\n      if (snapshot.hasChild(roomName)) {\n        let presenseRef = firebase.database().ref('/rooms/' + roomName + '/users').push();\n        presenseRef.onDisconnect().remove();\n        // Note: This assumes set cannot fail.\n        presenseRef.set({\n          nickName: nickName\n        }).then(() => onSuccess(roomName, presenseRef.key));\n      } else {\n        onNoRoom();\n      }\n    });\n  }\n\n  /**\n   * Moves self to waiting room, and sets a watch for game start.\n   *    Watches /rooms/<roomName>/game, and moves to GAME_VIEW if userID is\n   *    found under game/settings/order (AKA user is supposed to be in game).\n   *\n   * Note: This function can fail, but has no error handling.\n   */\n  onJoinedRoom = (roomName, userID) => {\n    let gameRef = firebase.database().ref('/rooms/' + roomName + '/game');\n    this.setState({\n      mainView: 'ROOM_VIEW',\n      viewProps: {\n      },\n      roomName: roomName,\n      userID: userID,\n    });\n    gameRef.on('value', (snapshot) => {\n      const value = snapshot.val();\n      if (value && value.settings && value.settings.players) {\n        if (value.settings.players[userID]) {\n          this.setState({\n            mainView: 'GAME_VIEW',\n            viewProps: {\n              settings: value.settings,\n              gameRef: snapshot.ref,\n            },\n          });\n          snapshot.ref.off('value');\n        } // else: user was not included in game, wait until next game.\n      }\n    });\n  }\n\n  // Actually psuedorandom. Returns 6 digit hex number.\n  randomName = () => {\n    let buf = new Uint8Array(3);\n    window.crypto.getRandomValues(buf);\n    return Array.from(buf, function(decimal) {\n      // Convert to hex, pad front with '0', then take last two characters.\n      return ('0' + decimal.toString(16)).substr(-2);\n    }).join('').toUpperCase();\n  }\n\n  handleLeaveGame = () => {\n    this.onJoinedRoom(this.state.roomName, this.state.userID);\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getMainComponent = () => {\n    if (this.state.mainView === 'ROOM_VIEW') {\n      return (\n        <RoomComponent\n          viewProps={this.state.viewProps}\n          roomName={this.state.roomName}\n          userID={this.state.userID}\n          roomRef={firebase.database().ref('/rooms/' + this.state.roomName)}\n        />\n      );\n    } else if (this.state.mainView === 'GAME_VIEW') {\n      return (\n        <GameComponent\n          viewProps={this.state.viewProps}\n          userID={this.state.userID}\n          onLeave={this.handleLeaveGame}\n        />\n      );\n    } else { // Default to ENTRY_VIEW.\n      return (\n        <Entry\n          onJoinRoom={this.handleJoinRoom}\n          onCreateRoom={this.handleCreateRoom}\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {this.getMainComponent()}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}