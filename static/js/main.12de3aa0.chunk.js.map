{"version":3,"sources":["logo.svg","components/Entry.js","components/RoomComponent.js","components/DrawCanvas.js","components/DrawComponent.js","components/GuessComponent.js","components/GamePhaseComponent.js","components/ChainLinkView.js","components/SpectateComponent.js","components/StartComponent.js","components/GameComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","layout","textField","margin","Entry","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCreateRoom","state","nickName","onCreateRoom","roomName","toUpperCase","console","log","window","alert","handleJoinRoom","onJoinRoom","_this2","react_default","a","createElement","style","src","logo","className","alt","display","flexDirection","TextField_default","label","value","onChange","event","setState","target","required","Button_default","variant","onClick","flex","Link_default","href","Component","paper","padding","divider","settingsContainer","settingsRow","marginBottom","marginLeft","marginRight","RoomComponent","componentDidMount","userRef","roomRef","child","on","snapshot","val","users","sharedRef","sharedState","handleSaveButton","set","handleStartButton","userIDs","keys","usersLength","length","order","prev","i","next","transaction","currentData","settings","assign","players","error","committed","getUserListItems","map","key","index","ListItem_default","ListItemIcon_default","AccountBox_default","ListItemText_default","primary","primaryTypographyProps","reduce","curr","Divider_default","drawTime","off","Paper_default","Typography_default","theme","type","List_default","userID","canvas","position","height","width","top","left","canvasContainer","paddingTop","maxHeight","maxWidth","toolbar","gridTemplateColumns","gridColumnGap","colours","justifySelf","gridRowGap","gridTemplateRows","svg","misc","DrawCanvas","handleMouseDown","_this$getCursorPositi","getCursorPosition","_this$getCursorPositi2","slicedToArray","x","y","drawCircle","ctx","beginPath","moveTo","penDown","handleMouseUp","closePath","_this$getCursorPositi3","_this$getCursorPositi4","handleMouseMove","_this$getCursorPositi5","_this$getCursorPositi6","lineTo","stroke","handleTouchStart","touches","handleTouchEnd","handleTouchMove","preventDefault","rect","refs","getBoundingClientRect","clientX","clientY","arc","radius","Math","PI","fill","clearscreen","fillRect","handleNewRadius","handleColour","colour","backgroundColor","getContext","fillStyle","ontouchmove","strokeStyle","lineWidth","ref","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","Tooltip_default","title","placement","bind","cx","cy","r","IconButton_default","Delete_default","DrawComponent","progressPresenseRef","progressRef","chainID","onDisconnect","remove","ready","timer","intervalID","setInterval","clearInterval","handleConfirmDrawing","componentWillUnmount","chainRef","update","image","drawing","toDataURL","gameRef","push","then","cancel","data","word","DrawCanvas_DrawCanvas","GuessComponent","componentWillUnount","handleConfirmGuess","guess","GamePhaseComponent","componentDidUpdate","prevProps","updateChainLinkData","limitToLast","once","chainLinkData","getMainComponent","GuessComponent_GuessComponent","DrawComponent_DrawComponent","ChainLinkView","chainContainer","headerContainer","SpectateComponent","synced","chains","forEach","chainSnapshot","thisChain","chainLinkSnapshot","handleStartSync","handleNext","chainIDs","idx","indexOf","handlePrevious","handleLeave","onLeave","getChainItems","slice","chainLink","ChainLinkView_ChainLinkView","getHeader","StartComponent","handleConfirmWord","prevNick","prevID","GameComponent","presenseRef","progressGame","mainView","nextChain","GamePhaseComponent_GamePhaseComponent","SpectateComponent_SpectateComponent","StartComponent_StartComponent","viewProps","App","joinIfNotExist","onJoinedRoom","createRandomRoom","joinIfExist","undefined","onSuccess","onError","randomName","onRoomExist","roomUrl","firebase","database","onNoRoom","hasChild","buf","Uint8Array","crypto","getRandomValues","Array","from","decimal","toString","substr","join","handleLeaveGame","RoomComponent_RoomComponent","GameComponent_GameComponent","Entry_Entry","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.12de3aa0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ac288ddb.svg\";","import React, { Component } from 'react';\nimport logo from '../logo.svg';\n\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = {\n  layout: {\n    \n  },\n  textField: {\n    margin: '5px',\n  },\n}\n\n/**\n * Small entry component to create or join a room.\n *\n * Sends a create or join fetch request to the server. Server will respond\n * with a URL to open an EventSource with.\n */\nexport default class Entry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      roomName: '',\n      nickName: '',\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  // Consider skipping this process and simply calling onJoinRoom with a flag\n  // to create the room if none exists.\n  handleCreateRoom = () => {\n    if (!this.state.nickName) {\n      window.alert(\"No nickname entered.\");\n      return;\n    }\n\n    if (this.props.onCreateRoom) {\n      this.props.onCreateRoom(this.state.roomName.toUpperCase(), this.state.nickName);\n    } else {\n      console.log(\"Component was not given a create room handler.\");\n    }\n  }\n  \n  handleJoinRoom = () => {\n    if (!this.state.nickName) {\n      window.alert(\"No nickname entered.\");\n      return;\n    }\n    if (!this.state.roomName) {\n      window.alert(\"No room name entered.\");\n      return;\n    }\n\n    if (this.props.onJoinRoom) {\n      this.props.onJoinRoom(this.state.roomName.toUpperCase(), this.state.nickName);\n    } else {\n      console.log(\"Component was not given a join room handler.\");\n    }\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n          <TextField\n            label='Room Name'\n            value={this.state.roomName}\n            onChange={(event) => this.setState({roomName: event.target.value})}\n            style={styles.textField}\n          />\n          <TextField\n            required\n            label='Nickname'\n            value={this.state.nickName}\n            onChange={(event) => this.setState({nickName: event.target.value})}\n            style={styles.textField}\n          />\n          <div style={{display: 'flex', flexDirection: 'row'}}>\n            <Button\n              variant='contained'\n              onClick={this.handleCreateRoom}\n              style={{flex: '1 1 auto', margin: '5px'}}\n            >\n              Create Room\n            </Button>\n            <Button\n              variant='contained'\n              onClick={this.handleJoinRoom}\n              style={{flex: '1 1 auto', margin: '5px'}}\n            >\n              Join Room\n            </Button>\n          </div>\n          <Link href='https://github.com/Subtlemon/ChalkChain' variant='body1'>\n            View Source on Github\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\n// Material-ui core.\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons.\nimport UserActive from '@material-ui/icons/AccountBox';\nimport UserInactive from '@material-ui/icons/AccountBox';\n\nconst styles = {\n  layout: {\n\n  },\n  paper: {\n    padding: '30px',\n    margin: '10px',\n  },\n  divider: {\n    margin: '10px',\n  },\n  settingsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  settingsRow: {\n    marginBottom: '10px',\n  },\n  textField: {\n    marginLeft: '5px',\n    marginRight: '5px',\n  }\n};\n\nexport default class RoomComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: [],\n      sharedState: {\n        drawTime: 60,\n      },\n    };\n  }\n\n  /***************************************************************************\n   * Lifecycle functions                                                     *\n   ***************************************************************************/\n\n  componentDidMount = () => {\n    // Register a listener for users to update list of users in room.\n    this.userRef = this.state.roomRef.child('users');\n    this.userRef.on('value', (snapshot) => {\n      if (snapshot.val()) {\n        // Construct array of object's values' nickName.\n        this.setState({\n          users: snapshot.val(),\n        });\n      }\n    });\n\n    // Register a listener for shared room state, such as round time limit.\n    this.sharedRef = this.state.roomRef.child('waitingState');\n    this.sharedRef.on('value', (snapshot) => {\n      if (snapshot.val()) {\n        this.setState({\n          sharedState: snapshot.val()\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.userRef.off('value');\n    this.sharedRef.off('value');\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      roomRef: props.roomRef,\n      roomName: props.roomName,\n      userID: props.userID,\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  handleSaveButton = (event) => {\n    // This assumes set cannot fail.\n    this.sharedRef.set(this.state.sharedState);\n  }\n\n  handleStartButton = (event) => {\n    if (!this.state.users) {\n      window.alert('Internal Error: No users found.');\n      return;\n    }\n\n    // Determine gameplay order based on user state.\n    const userIDs = Object.keys(this.state.users);\n    const usersLength = userIDs.length;\n    if (usersLength < 2) {\n      window.alert(\"Can't start game with less than 2 players.\");\n      return;\n    }\n    let order = {};\n    order[userIDs[0]] = {\n      prev: userIDs[usersLength - 1],\n    };\n    for (let i = 1; i < usersLength; ++i) {\n      order[userIDs[i]] = {\n        prev: userIDs[i-1],\n      };\n      order[userIDs[i-1]].next = userIDs[i];\n    }\n    order[userIDs[usersLength - 1]].next = userIDs[0];\n\n    return this.state.roomRef.child('game').transaction((currentData) => {\n      if (currentData === null) {\n        return {\n          settings: Object.assign(this.state.sharedState, {\n            order: order,\n            players: this.state.users,\n          }),\n        };\n      } else {\n        return; // Abort the transaction.\n      };\n    }, (error, committed, snapshot) => {\n      if (error) {\n        window.alert('Error: ' + error);\n      } else if (!committed) {\n        window.alert('Game is already started.');\n      } else {\n        console.log('Game started successfully.');\n      }\n    });\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getUserListItems = () => {\n    if (this.state.users && Object.keys(this.state.users).length) {\n      return Object.keys(this.state.users).map((key, index) => {\n        return (\n          <ListItem key={key}>\n            <ListItemIcon>\n              <UserActive />\n            </ListItemIcon>\n            <ListItemText\n              primary={this.state.users[key].nickName}\n              primaryTypographyProps={{variant: 'h6'}}\n            />\n          </ListItem>\n        );\n      }).reduce((prev, curr) => [prev, <Divider key={prev+'div'} />, curr]);\n    } else {\n      return (\n        <ListItem>\n          <ListItemText primary=\"You've somehow entered a ghost room.\n            It's probably in your best interest to leave.\"/>\n        </ListItem>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <Paper style={styles.paper}>\n          <Typography variant='h4'>\n            Room Name: <b>{this.state.roomName}</b>\n          </Typography>\n          <Typography variant='subtitle1'>\n            Ask your friends to join using the above room name!\n          </Typography>\n          <Divider variant='middle' style={styles.divider} />\n          <div style={styles.settingsContainer}>\n            <div style={styles.settingsRow}>\n              <TextField\n                label='Round Theme (unused)'\n                value={this.state.sharedState.theme || ''}\n                onChange={(event) => this.setState({sharedState: {theme: event.target.value}})}\n                style={styles.textField}\n              />\n              <TextField\n                required\n                label='Seconds per drawing'\n                type='number'\n                value={this.state.sharedState.drawTime}\n                onChange={(event) => this.setState({sharedState: {drawTime: event.target.value}})}\n                style={styles.textField}\n              />\n            </div>\n            <Button variant='contained' onClick={this.handleSaveButton}>Save Settings</Button>\n          </div>\n        </Paper>\n        <Paper style={styles.paper}>\n          <Typography variant='h5'>\n            Lobby\n          </Typography>\n          <List>\n            {this.getUserListItems()}\n          </List>\n          <Button variant='contained' onClick={this.handleStartButton}>Start Game</Button>\n        </Paper>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport ClearIcon from '@material-ui/icons/Delete';\n\nconst styles = {\n  canvas: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    top: '0',\n    left: '0',\n  },\n  canvasContainer: {\n    position: 'relative',\n    paddingTop: '100%',\n    width: '100%',\n    maxHeight: '500px',\n    maxWidth: '500px',\n  },\n  divider: {\n    margin: '10px',\n  },\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto',\n    gridColumnGap: '10px',\n  },\n  colours: {\n    justifySelf: 'center',\n    display: 'grid',\n    gridColumnGap: '5px',\n    gridRowGap: '5px',\n    gridTemplateColumns: '40px 40px 40px 40px 40px',\n    gridTemplateRows: '40px 40px',\n  },\n  svg: {\n    height: '100%',\n    width: '100%',\n  },\n  misc: {\n    justifySelf: 'center',\n    display: 'grid',\n    gridColumnGap: '5px',\n    gridRowGap: '5px',\n    gridTemplateColumns: '40px 40px',\n    gridTemplateRows: '40px 40px',\n  },\n};\n\n// Assumes canvas cannot transform.\nexport default class DrawCanvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      colour: 'black',\n      radius: 3,\n    };\n  }\n\n  componentDidMount() {\n    let canvas = this.refs.canvas;\n    this.ctx = canvas.getContext('2d');\n\n    // Resize the canvas to fit parent.\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n\n    this.ctx.fillStyle = 'white';\n    this.clearscreen();\n    this.ctx.fillStyle = this.state.colour;\n\n    // Workaround to enable preventDefault()\n    // https://github.com/facebook/react/issues/9809\n    canvas.ontouchmove = this.handleTouchMove;\n  }\n\n  componentDidUpdate() {\n    this.ctx.fillStyle = this.state.colour;\n    this.ctx.strokeStyle = this.state.colour;\n    this.ctx.lineWidth = this.state.radius * 2;\n  }\n\n  componentWillUnmount() {\n    delete this.ctx;\n  }\n\n  /***************************************************************************\n   * Canvas Events                                                           *\n   ***************************************************************************/\n\n  handleMouseDown = (event) => {\n    const [x, y] = this.getCursorPosition(event);\n    this.drawCircle(x, y);\n    this.ctx.beginPath();\n    this.ctx.moveTo(x, y);\n    this.setState({penDown: true});\n  }\n\n  handleMouseUp = (event) => {\n    if (this.state.penDown) {\n      this.ctx.closePath();\n      const [x, y] = this.getCursorPosition(event);\n      this.drawCircle(x, y);\n    }\n    this.setState({penDown: false});\n  }\n\n  handleMouseMove = (event) => {\n    if (this.state.penDown) {\n      const [x, y] = this.getCursorPosition(event);\n      this.ctx.lineTo(x, y);\n      this.ctx.stroke();\n    }\n  }\n\n  handleTouchStart = (event) => {\n    if (event.touches.length) {\n      this.handleMouseDown(event.touches[0]);\n    }\n  }\n\n  handleTouchEnd = (event) => {\n    if (event.touches.length) {\n      this.handleMouseUp(event.touches[0]);\n    }\n  }\n\n  handleTouchMove = (event) => {\n    if (event.touches.length) {\n      event.preventDefault();\n      console.log(\"preventing default?\");\n      this.handleMouseMove(event.touches[0]);\n    }\n  }\n\n  /***************************************************************************\n   * Canvas Helpers                                                          *\n   ***************************************************************************/\n\n  getCursorPosition = (event, canvas) => {\n    const rect = this.refs.canvas.getBoundingClientRect();\n    return [event.clientX - rect.left, event.clientY - rect.top];\n  }\n\n  /**\n   * Draws a circle of radius defined by state centered at x and y.\n   */\n  drawCircle = (x, y) => {\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, this.state.radius, 0, 2 * Math.PI);\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  clearscreen = () => {\n    this.ctx.fillRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n  }\n\n  /***************************************************************************\n   * Button Event Handlers                                                   *\n   ***************************************************************************/\n\n  handleNewRadius = (radius) => {\n    this.setState({radius: radius});\n  }\n\n  handleColour = (event) => {\n    this.setState({\n      colour: event.target.style.backgroundColor\n    });\n  };\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  render() {\n    return (\n      <div>\n        <Paper style={styles.canvasContainer}>\n          <canvas\n            ref='canvas'\n            onMouseDown={this.handleMouseDown}\n            onMouseUp={this.handleMouseUp}\n            onMouseMove={this.handleMouseMove}\n            onTouchStart={this.handleTouchStart}\n            onTouchEnd={this.handleTouchEnd}\n            // Moved onTouchMove to componentDidMount.\n            style={styles.canvas}\n          />\n        </Paper>\n        <Divider style={styles.divider} />\n        <div style={styles.toolbar}>\n          <div style={styles.colours}>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'black'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'red'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'blue'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'green'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'yellow'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'white'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'aqua'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'fuchsia'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'brown'}}/>\n            <Paper onClick={this.handleColour} style={{backgroundColor: 'lime'}}/>\n          </div>\n          <div style={styles.misc}>\n            <Tooltip title='Small Brush' placement='top'>\n              <Paper onClick={this.handleNewRadius.bind(this, 1)}>\n                <svg style={styles.svg}><circle cx='20' cy='20' r='5' fill='black' /></svg>\n              </Paper>\n            </Tooltip>\n            <Tooltip title='Medium Brush' placement='top'>\n              <Paper onClick={this.handleNewRadius.bind(this, 3)}>\n                <svg style={styles.svg}><circle cx='20' cy='20' r='10' fill='black' /></svg>\n              </Paper>\n            </Tooltip>\n            <Tooltip title='Large Brush' placement='bottom'>\n              <Paper onClick={this.handleNewRadius.bind(this, 15)}>\n                <svg style={styles.svg}><circle cx='20' cy='20' r='15' fill='black' /></svg>\n              </Paper>\n            </Tooltip>\n            <Tooltip title='Fill Screen' placement='bottom'>\n              <IconButton onClick={this.clearscreen}>\n                <ClearIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport DrawCanvas from './DrawCanvas';\n\nconst styles = {\n  layout: {\n\n  },\n  paper: {\n    padding: '20px',\n  },\n  divider: {\n    margin: '10px',\n  }\n};\n\nexport default class DrawComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timer: 60,\n    };\n  }\n\n  componentDidMount = () => {\n    this.progressPresenseRef = this.state.progressRef.child(this.state.chainID);\n    this.progressPresenseRef.onDisconnect().remove();\n    this.progressPresenseRef.set(false);\n    this.setState({ready: false, timer: this.state.drawTime});\n    \n    // Set timer.\n    this.intervalID = setInterval(() => {\n      this.setState({timer: this.state.timer - 1});\n      if (this.state.timer <= 0) {\n        clearInterval(this.intervalID);\n        if (!this.state.ready) {\n          this.handleConfirmDrawing();\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount = () => {\n    if (this.intervalID) {\n      clearInterval(this.intervalID);\n    }\n    delete this.chainRef;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.gameRef,\n      progressRef: props.progressRef,\n      players: props.players,\n      drawTime: props.drawTime,\n      userID: props.userID,\n      chainID: props.chainID,\n      data: props.data,\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  handleConfirmDrawing = (event) => {\n    if (this.chainRef) {\n      this.chainRef.update({image: this.refs.drawing.refs.canvas.toDataURL()});\n    } else {\n      this.chainRef = this.state.gameRef.child('chains').child(this.state.chainID).push();\n      this.chainRef.set({\n        image: this.refs.drawing.refs.canvas.toDataURL(),\n        userID: this.state.userID,\n      });\n    }\n\n    if (!this.state.ready) {\n      this.progressPresenseRef.remove().then(() => {\n        this.progressPresenseRef.onDisconnect().cancel();\n        delete this.progressPresenseRef;\n      });\n      this.setState({ready: true});\n    }\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <Paper style={styles.paper}>\n          <Typography variant='h6'>\n            You are drawing <b>{this.state.players[this.state.data.userID].nickName}</b>'s word:\n          </Typography>\n          <Typography variant='h5'>\n            <b>{this.state.data.word}</b>\n          </Typography>\n        </Paper>\n        <Divider style={styles.divider} />\n        <DrawCanvas ref='drawing'/>\n        <Divider style={styles.divider} />\n        <Paper style={styles.paper}>\n          <Typography variant='h6'>\n            {this.state.timer ? this.state.timer + 's remaining' : ''}\n          </Typography>\n          <Button\n            variant='contained'\n            onClick={this.handleConfirmDrawing}\n          >\n            {this.state.ready ? 'Update Drawing' : 'Finished Drawing'}\n          </Button>\n        </Paper>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  layout: {\n\n  },\n  paper: {\n    padding: '20px',\n  },\n  divider: {\n    margin: '10px',\n  },\n};\n\nexport default class GuessComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ready: false,\n      guess: '',\n    };\n  }\n\n  componentDidMount = () => {\n    this.progressPresenseRef = this.state.progressRef.child(this.state.chainID);\n    this.progressPresenseRef.onDisconnect().remove();\n    this.progressPresenseRef.set(false);\n    this.setState({ready: false});\n  }\n\n  componentWillUnount = () => {\n    delete this.chainRef;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.gameRef,\n      progressRef: props.progressRef,\n      players: props.players,\n      chainID: props.chainID,\n      userID: props.userID,\n      data: props.data,\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  handleConfirmGuess = (event) => {\n    if (!this.state.guess) {\n      window.alert(\"You didn't guess anything\");\n      return;\n    }\n\n    if (this.chainRef) {\n      this.chainRef.update({word: this.state.guess});\n    } else {\n      // Push a new link in the chain and update server.\n      this.chainRef = this.state.gameRef.child('chains').child(this.state.chainID).push();\n      this.chainRef.set({\n        word: this.state.guess,\n        userID: this.state.userID,\n      });\n    }\n\n    if (!this.state.ready) {\n      this.progressPresenseRef.remove().then(() => {\n        this.progressPresenseRef.onDisconnect().cancel();\n        delete this.progressPresenseRef;\n      });\n      this.setState({ready: true});\n    }\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <Paper style={styles.paper}>\n          <Typography variant='h6'>\n            You are guessing <b>{this.state.players[this.state.data.userID].nickName}</b>'s image:\n          </Typography>\n        </Paper>\n        <Divider style={styles.divider}/>\n        <Paper>\n          <img ref='img' alt='guess' src={this.state.data.image} />\n        </Paper>\n        <Divider style={styles.divider} />\n        <Paper style={styles.paper}>\n          <TextField\n            label='What do you see?'\n            value={this.state.guess}\n            onChange={(event) => this.setState({guess: event.target.value})}\n          />\n          <Button\n            variant='contained'\n            onClick={this.handleConfirmGuess}\n          >\n            {this.state.ready ? 'Guess Again' : 'Guess'}\n          </Button>\n        </Paper>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport DrawComponent from './DrawComponent';\nimport GuessComponent from './GuessComponent';\n\nconst styles = {\n  layout: {\n\n  },\n  paper: {\n    padding: '20px',\n  },\n};\n\nexport default class GamePhaseComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ready: false,\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.chainID !== this.props.chainID) {\n      this.updateChainLinkData();\n    }\n  }\n\n  componentDidMount = () => {\n    this.updateChainLinkData();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.gameRef,\n      progressRef: props.progressRef,\n      settings: props.settings,\n      chainID: props.chainID,\n      userID: props.userID,\n    };\n  }\n\n  updateChainLinkData = () => {\n    this.state.gameRef.child('chains').child(this.state.chainID)\n      .limitToLast(1).once('child_added', (snapshot) => {\n        if (snapshot.val()) {\n          this.setState({chainLinkData: snapshot.val()});\n        }\n      });\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getMainComponent = () => {\n    if (this.state.chainLinkData && this.state.chainLinkData.image) {\n      return (\n        <GuessComponent\n          gameRef={this.state.gameRef}\n          progressRef={this.state.progressRef}\n          players={this.state.settings.players}\n          chainID={this.state.chainID}\n          userID={this.state.userID}\n          data={this.state.chainLinkData}\n        />\n      );\n    } else if (this.state.chainLinkData && this.state.chainLinkData.word) {\n      return (\n        <DrawComponent\n          gameRef={this.state.gameRef}\n          progressRef={this.state.progressRef}\n          players={this.state.settings.players}\n          drawTime={this.state.settings.drawTime}\n          chainID={this.state.chainID}\n          userID={this.state.userID}\n          data={this.state.chainLinkData}\n        />\n      );\n    } else {\n      return (\n        <Paper style={styles.paper}>\n          <Typography variant='h5'>\n            Loading game phase...\n          </Typography>\n        </Paper>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        {this.getMainComponent()}\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  layout: {\n\n  }\n};\n\nexport default class ChainLinkView extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      data: props.data,\n      players: props.players,\n    };\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getMainComponent = () => {\n    if (this.state.data.word) {\n      return (\n        <Typography variant='subtitle1'>\n          <b>{this.state.players[this.state.data.userID].nickName}</b> guessed: <b>{this.state.data.word}</b>\n        </Typography>\n      );\n    } else {\n      return [\n        <Typography variant='subtitle1'>\n          <b>{this.state.players[this.state.data.userID].nickName}</b> drew this:\n        </Typography>,\n        <img src={this.state.data.image} alt='Broken Image, Sorry!'/>\n      ];\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        {this.getMainComponent()}\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport ChainLinkView from './ChainLinkView';\n\nconst styles = {\n  layout: {\n\n  },\n  chainContainer: {\n\n  },\n  divider: {\n    margin: '10px',\n  },\n  paper: {\n    padding: '20px',\n    margin: '10px',\n  },\n  headerContainer: {\n    maxWidth: '500px',\n  },\n};\n\nexport default class SpectateComponent extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      synced: false,\n    };\n  }\n\n  /***************************************************************************\n   * Lifecycle functions                                                     *\n   ***************************************************************************/\n\n  componentDidMount = () => {\n    // Register a listener for shared room state.\n    this.sharedRef = this.state.gameRef.child('spectateState');\n    this.sharedRef.on('value', (snapshot) => {\n      if (snapshot.val()) {\n        this.setState({\n          synced: true,\n          sharedState: snapshot.val(),\n        });\n      }\n    });\n\n    // Load in all chain data.\n    this.state.gameRef.child('chains').once('value').then((snapshot) => {\n      if (snapshot.val()) {\n        let chains = {};\n        snapshot.forEach((chainSnapshot) => {\n          let thisChain = [];\n          chainSnapshot.forEach((chainLinkSnapshot) => {\n            thisChain.push(chainLinkSnapshot.val());\n          });\n          chains[chainSnapshot.key] = thisChain;\n        });\n        this.setState({\n          chains: chains,\n        });\n      }\n    });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.gameRef,\n      players: props.players,\n      userID: props.userID,\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  handleStartSync = (event) => {\n    this.sharedRef.set({\n      chainID: this.state.userID,\n    });\n  }\n\n  handleNext = (event) => {\n    const chainIDs = Object.keys(this.state.chains);\n    let idx = chainIDs.indexOf(this.state.sharedState.chainID) + 1;\n    if (idx >= chainIDs.length) {\n      idx = 0;\n    }\n    this.sharedRef.set({\n      chainID: chainIDs[idx],\n    });\n  }\n\n  handlePrevious = (event) => {\n    const chainIDs = Object.keys(this.state.chains);\n    let idx = chainIDs.indexOf(this.state.sharedState.chainID);\n    if (idx === 0) {\n      idx = chainIDs.length;\n    }\n    this.sharedRef.set({\n      chainID: chainIDs[idx-1],\n    });\n  }\n\n  handleLeave = (event) => {\n    if (this.props.onLeave) {\n      this.props.onLeave();\n    } else {\n      console.log('No onLeave handler found.');\n    }\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getChainItems = (chainID) => {\n    return [\n      <Typography variant='h6'>\n        The original word was: <b>{this.state.chains[chainID][0].word}</b>\n      </Typography>,\n      <Divider style={styles.divider} />,\n      this.state.chains[chainID].slice(1).map((chainLink) => {\n        return (\n          <ChainLinkView data={chainLink} players={this.state.players} />\n        );\n      }),\n    ];\n  }\n  \n  getMainComponent = () => {\n    if (this.state.chains) {\n      let chainID = this.state.userID;\n      if (this.state.sharedState && this.state.sharedState.chainID) {\n        chainID = this.state.sharedState.chainID;\n      }\n      return (\n        <div style={styles.chainContainer}>\n          {this.getChainItems(chainID)}\n        </div>\n      );\n    } else {\n      return (\n        <Typography>\n          Loading results...\n        </Typography>\n      );\n    }\n  }\n\n  getHeader = () => {\n    if (this.state.synced) {\n      return (\n        <div>\n          <Typography variant='h5'>\n            Reviewing Results\n          </Typography>\n          <Typography variant='subtitle1'>\n            Let's see the results with everyone!\n          </Typography>\n          <Button\n            variant='contained'\n            onClick={this.handlePrevious}\n            style={{margin: '5px'}}\n          >\n            Previous Chain\n          </Button>\n          <Button\n            variant='contained'\n            onClick={this.handleNext}\n            style={{margin: '5px'}}\n          >\n            Next Chain\n          </Button>\n        </div>\n      );\n    } else {\n      return(\n        <div style={styles.headerContainer}>\n          <Typography variant='h5'>\n            Your Chain\n          </Typography>\n          <Typography variant='subtitle1'>\n            Take a sneak peak at how your chalk chain turned out,\n            then join everyone else in reviewing their results!\n          </Typography>\n          <Button\n            variant='contained'\n            onClick={this.handleStartSync}\n          >\n            Review Results\n          </Button>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <Paper style={styles.paper}>\n          {this.getHeader()}\n        </Paper>\n        <Paper style={styles.paper}>\n          {this.getMainComponent()}\n          <Divider style={styles.divider} />\n          <Button\n            variant='contained'\n            onClick={this.handleLeave}\n          >\n            Back to Waiting Room\n          </Button>\n        </Paper>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  layout: {\n\n  },\n  paper: {\n    padding: '20px',\n  },\n};\n\nexport default class StartComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ready: false,\n      word: '',\n    };\n  }\n\n  componentDidMount = () => {\n    this.progressPresenseRef = this.state.progressRef.child(this.state.chainID);\n    this.progressPresenseRef.onDisconnect().remove();\n    this.progressPresenseRef.set(false);\n    this.setState({ready: false});\n  }\n\n  componentWillUnmount = () => {\n    delete this.chainRef;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.gameRef,\n      progressRef: props.progressRef,\n      chainID: props.chainID,\n      prevNick: props.players[props.prevID].nickName,\n      users: props.players,\n    };\n  }\n\n  /***************************************************************************\n   * Button Events                                                           *\n   ***************************************************************************/\n\n  handleConfirmWord = (event) => {\n    if (!this.state.word) {\n      window.alert('Please enter a word for people to draw');\n      return;\n    }\n\n    if (this.chainRef) {\n      this.chainRef.update({word: this.state.word});\n    } else {\n      this.chainRef = this.state.gameRef.child('chains').child(this.state.chainID).push();\n      this.chainRef.set({\n        word: this.state.word,\n        userID: this.state.chainID,\n      });\n    }\n\n    if (!this.state.ready) {\n      this.progressPresenseRef.remove().then(() => {\n        this.progressPresenseRef.onDisconnect().cancel();\n        delete this.progressPresenseRef;\n      });\n      this.setState({ready: true});\n    }\n  }\n  \n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        <Paper style={styles.paper}>\n          <Typography variant='h6'>\n            You are selecting a word for: <b>{this.state.prevNick}</b>\n          </Typography>\n          <TextField\n            label='Your word'\n            value={this.state.word}\n            onChange={(event) => this.setState({word: event.target.value})}\n          />\n          <Button\n            variant='contained'\n            onClick={this.handleConfirmWord}\n          >\n            {this.state.ready ? 'Reconfirm' : 'Confirm'}\n          </Button>\n        </Paper>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\n\nimport GamePhaseComponent from './GamePhaseComponent';\nimport SpectateComponent from './SpectateComponent';\nimport StartComponent from './StartComponent';\n\nconst styles = {\n  layout: {\n\n  },\n};\n\nexport default class GameComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mainView: 'START_VIEW',\n    };\n  }\n\n  componentDidMount = () => {\n    // Establish presense in game.\n    this.presenseRef = this.state.gameRef.child('activePlayers').child(this.state.userID);\n    this.presenseRef.onDisconnect().remove();\n    this.presenseRef.set(this.state.userID);\n\n    // Set listener to progress through game if everybody is ready.\n    this.progressRef = this.state.gameRef.child('notReady');\n    this.progressRef.on('value', (snapshot) => {\n      if (!snapshot.val()) {\n        this.progressGame();\n      }\n    });\n\n    this.setState({mainView: 'START_VIEW', chainID: this.state.userID});\n  }\n\n  componentWillUnmount = () => {\n    this.progressRef.off();\n    delete this.progressRef;\n    this.presenseRef.remove().then(() => {\n      this.presenseRef.onDisconnect().cancel();\n      delete this.presenseRef;\n    });\n\n    // Also remove self from players list, to avoid being sucked back into the game.\n    this.state.gameRef.child('settings').child('players').child(this.state.userID).remove();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      gameRef: props.viewProps.gameRef,\n      settings: props.viewProps.settings,\n      userID: props.userID,\n    };\n  }\n\n  /***************************************************************************\n   * Progression Event                                                       *\n   ***************************************************************************/\n\n  progressGame = () => {\n    const nextChain = this.state.settings.order[this.state.chainID].next;\n    if (nextChain === this.state.userID) {\n      // We've gone full circle.\n      this.setState({\n        mainView: 'SPECTATE_VIEW',\n      });\n    } else {\n      this.setState({\n        mainView: 'GAME_PHASE_VIEW',\n        chainID: nextChain,\n      });\n    }\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getMainComponent = () => {\n    if (this.state.mainView === 'GAME_PHASE_VIEW') {\n      return (\n        <GamePhaseComponent\n          gameRef={this.state.gameRef}\n          progressRef={this.state.gameRef.child('notReady')}\n          settings={this.state.settings}\n          chainID={this.state.chainID}\n          userID={this.state.userID}\n        />\n      );\n    } else if (this.state.mainView === 'SPECTATE_VIEW') {\n      return (\n        <SpectateComponent\n          gameRef={this.state.gameRef}\n          players={this.state.settings.players}\n          userID={this.state.userID}\n          onLeave={this.props.onLeave}\n        />\n      );\n    } else { // Default to START_VIEW.\n      return (\n        <StartComponent\n          gameRef={this.state.gameRef}\n          progressRef={this.state.gameRef.child('notReady')}\n          chainID={this.state.userID}\n          prevID={this.state.settings.order[this.state.userID].prev}\n          players={this.state.settings.players}\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.layout}>\n        {this.getMainComponent()}\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport './App.css';\nimport Entry from './components/Entry';\nimport RoomComponent from './components/RoomComponent';\nimport GameComponent from './components/GameComponent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // Initialize Firebase\n    const config = {\n      apiKey: process.env.REACT_APP_API_KEY,\n      authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n      databaseURL: process.env.REACT_APP_DATABASE_URL,\n      projectId: process.env.REACT_APP_PROJECT_ID,\n      storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n      messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n    };\n    firebase.initializeApp(config);\n\n    this.state = {\n      mainView: 'ENTRY_VIEW',\n    };\n  }\n\n  /***************************************************************************\n   * Entry Event Handlers                                                    *\n   ***************************************************************************/\n\n  handleCreateRoom = (roomName, nickName) => {\n    if (roomName) {\n      this.joinIfNotExist(\n        roomName,\n        nickName,\n        this.onJoinedRoom,\n        (error) => {\n          window.alert('Failed to join room: ' + error);\n        },\n        () => {\n          window.alert('Room already exists with that name.');\n        }\n      );\n    } else {\n      this.createRandomRoom(nickName, this.onJoinedRoom, (error) => {\n        window.alert('Failed to join room: ' + error);\n      });\n    }\n  }\n\n  handleJoinRoom = (roomName, nickName) => {\n    this.joinIfExist(\n      roomName,\n      nickName,\n      this.onJoinedRoom,\n      undefined,\n      () => {\n        window.alert('No room found with that name.');\n      }\n    );\n  }\n\n  /***************************************************************************\n   * Entry Request Helpers                                                   *\n   ***************************************************************************/\n\n  /**\n   * Recursively attempts to create a room with a random name.\n   *\n   * On success, calls onSuccess with room name, user ID, and nickname.\n   *    Also sets a presense node under /rooms/<roomName>/users/<userID>\n   * On error, returns error message.\n   */\n  createRandomRoom = (nickName, onSuccess, onError) => {\n    this.joinIfNotExist(\n      this.randomName(),    // Random room name.\n      nickName,\n      onSuccess,\n      onError,\n      this.createRandomRoom // Recursively retry with new room name.\n    );\n  }\n\n  /**\n   * Attempts to create a room with roomName.\n   * \n   * On success, calls onSuccess with room name, user ID, and nickname.\n   *    Also sets a presense node under /rooms/<roomName>/users/<userID>\n   * On error, returns error message.\n   * On room exists, calls onRoomExist with nickname, onSuccess, and onError.\n   */\n  joinIfNotExist = (roomName, nickName, onSuccess, onError, onRoomExist) => {\n    const roomUrl = '/rooms/' + roomName;\n    let roomRef = firebase.database().ref(roomUrl);\n    // Note: This transaction is only to check existence of the room.\n    return roomRef.transaction((currentData) => {\n      if (currentData === null) {\n        // Not exactly sure if this does what I want, but it works, so :/\n        return {\n          users: null\n        };\n      } else {\n        console.log('Room already exists.');\n        return; // Abort the transaction.\n      }\n    }, (error, committed, snapshot) => {\n      if (error) {\n        onError(error);\n      } else if (!committed) {\n        if (onRoomExist) {\n          onRoomExist(nickName, onSuccess, onError);\n        }\n      } else {\n        let presenseRef = firebase.database().ref(roomUrl + '/users').push();\n        presenseRef.onDisconnect().remove();\n        // Note: This assumes set cannot fail.\n        presenseRef.set({\n          nickName: nickName\n        }).then(() => onSuccess(roomName, presenseRef.key));\n      }\n    });\n  }\n\n  /**\n   * Attempts to join a room with roomName.\n   *\n   * On success, calls onSuccess with room name and user ID.\n   *    Also sets a presense node under /rooms/<roomName>/users/<userID>\n   * On no room, calls onNoRoom.\n   * This function cannot actually call onError.\n   */\n  joinIfExist = (roomName, nickName, onSuccess, onError, onNoRoom) => {\n    let roomRef = firebase.database().ref('/rooms');\n    roomRef.once('value', (snapshot) => {\n      if (snapshot.hasChild(roomName)) {\n        let presenseRef = firebase.database().ref('/rooms/' + roomName + '/users').push();\n        presenseRef.onDisconnect().remove();\n        // Note: This assumes set cannot fail.\n        presenseRef.set({\n          nickName: nickName\n        }).then(() => onSuccess(roomName, presenseRef.key));\n      } else {\n        onNoRoom();\n      }\n    });\n  }\n\n  /**\n   * Moves self to waiting room, and sets a watch for game start.\n   *    Watches /rooms/<roomName>/game, and moves to GAME_VIEW if userID is\n   *    found under game/settings/order (AKA user is supposed to be in game).\n   *\n   * Note: This function can fail, but has no error handling.\n   */\n  onJoinedRoom = (roomName, userID) => {\n    let gameRef = firebase.database().ref('/rooms/' + roomName + '/game');\n    this.setState({\n      mainView: 'ROOM_VIEW',\n      viewProps: {\n      },\n      roomName: roomName,\n      userID: userID,\n    });\n    gameRef.on('value', (snapshot) => {\n      const value = snapshot.val();\n      if (value && value.settings && value.settings.players) {\n        if (value.settings.players[userID]) {\n          this.setState({\n            mainView: 'GAME_VIEW',\n            viewProps: {\n              settings: value.settings,\n              gameRef: snapshot.ref,\n            },\n          });\n          snapshot.ref.off('value');\n        } // else: user was not included in game, wait until next game.\n      }\n    });\n  }\n\n  // Actually psuedorandom. Returns 6 digit hex number.\n  randomName = () => {\n    let buf = new Uint8Array(3);\n    window.crypto.getRandomValues(buf);\n    return Array.from(buf, function(decimal) {\n      // Convert to hex, pad front with '0', then take last two characters.\n      return ('0' + decimal.toString(16)).substr(-2);\n    }).join('').toUpperCase();\n  }\n\n  handleLeaveGame = () => {\n    this.onJoinedRoom(this.state.roomName, this.state.userID);\n  }\n\n  /***************************************************************************\n   * Render                                                                  *\n   ***************************************************************************/\n\n  getMainComponent = () => {\n    if (this.state.mainView === 'ROOM_VIEW') {\n      return (\n        <RoomComponent\n          viewProps={this.state.viewProps}\n          roomName={this.state.roomName}\n          userID={this.state.userID}\n          roomRef={firebase.database().ref('/rooms/' + this.state.roomName)}\n        />\n      );\n    } else if (this.state.mainView === 'GAME_VIEW') {\n      return (\n        <GameComponent\n          viewProps={this.state.viewProps}\n          userID={this.state.userID}\n          onLeave={this.handleLeaveGame}\n        />\n      );\n    } else { // Default to ENTRY_VIEW.\n      return (\n        <Entry\n          onJoinRoom={this.handleJoinRoom}\n          onCreateRoom={this.handleCreateRoom}\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {this.getMainComponent()}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}